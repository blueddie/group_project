[1]시퀀스 : 일련의 데이터 요소가 순서대로 배열된 것 (자연어 처리에서는 문장이나 문서 같은 텍스트 시퀀스가 주로 사용, 이미지 데이터의 픽셀 값이나 특징 맵과 같은 시퀀스가 될 수 있음)

[2] self-attention : 특정 시퀀스의 각 요소가 다른 모든 요소들과 상호작용하는 메커니즘 ("자신을 포함한 다른 모든 요소들과의 관계"를 계산하는 메커니즘) 요소는 전체 시퀀스의 다른 요소들과의 관계를 동적으로 파악 가능.
                     Self-Attention 메커니즘은 다음과 같은 세 가지 주요 단계로 구성됩니다.
                        (1) Query, Key, Value (질문, 키, 값) 입력 시퀀스의 각 요소에 대해 세 가지 벡터를 계산

                                Query : 쿼리는 다른 데이터와 비교하여 얼마나 중요한지를 나타내는 벡터. 주어진 데이터에 대한 정보를 질문하는 역할. 예를 들어, 주어진 문장에서 특정 단어의 중요성을 묻는 질문이 쿼리에 해당.
                                Key : 키는 주어진 데이터의 식별자 역할. 다른 데이터와의 관계를 파악하고 해당 데이터를 인덱싱하기 위해 사용. 예를 들어, 주어진 문장에서 각 단어를 고유하게 식별하는 역할
                                Value : 주어진 데이터의 실제 정보를 나타내는 벡터. 쿼리와 키에 대한 정보를 포함하고 있으며, 이 정보는 주어진 데이터에 대한 정보를 나타내는 데 사용. 예를 들어, 주어진 문장에서 각 단어의 의미나 의도를 설명하는 역할
                                
                                예시 문장 1 : "고양이가 창문을 통해 밖을 내다봤다."
                                        Query : "누가 창문을 통해 밖을 내다봤는지?"
                                        Key : "고양이가", "창문을", "통해", "밖을", "내다봤다"
                                        Value : "동물" : 고양이에 대한 정보, "유리문": 창문에 대한 정보, "이동": 통해에 대한 정보, "외부": 밖에 대한 정보, "활동": 내다보다에 대한 정보

                                예시 문장 2 : "어제 밤에 숲 속에서 큰 소리가 들렸다. 그 소리는 나를 무서워하게 만들었다."
                                        Query : "어떤 소리가 무서움을 느끼게 만들었는지?"
                                        Key :  "어제", "밤에", "숲", "속에서", "큰", "소리가", "들렸다", "그", "소리는", "나를", "무서워하게", "만들었다"
                                        Value : 시간", "위치", "장소", "위치", "크기", "소리", "감지되었다", "소리", "효과", "감정", "효과", "감정"
                        

                        (2) Attention Score 계산: 각 요소에 대해 Query와 Key 사이의 유사도를 계산하여 Attention Score를 생성합니다. 각 쿼리에 대해 모든 키와의 유사도를 계산하여 생성
                                                  유사도를 계산하는 방법에는 여러 가지가 있을 수 있지만, 주로 내적(dot product)이나 유클리드 거리(euclidean distance) 등의 방법을 사용
                                                  내적 : 두 벡터 간의 유사도를 측정하는 데 자주 사용
                                                         두 벡터의 각 성분을 곱한 후 그 결과를 모두 더하여 계산,내적이 양수일수록 두 벡터가 비슷한 방향을 향하고, 음수일수록 반대 방향을 향한다.
                                                         따라서 내적이 크면 클수록 두 벡터 간의 유사도가 높다고 볼 수 있습니다.
                                                        a=[2,3,4]
                                                        b=[1,0,−1]
                                                        내적(a,b)=(2×1) + (3×0) + (4×−1) = −2  두 벡터는 유사도가 낮다.
​
                                                  유클리드 거리 : 벡터 간의 거리를 측정하여 유사도를 계산
                                                                 
                        (3) 가중 평균: Attention Score를 사용하여 각 요소의 가중 평균된 Value를 계산합니다. 이는 각 요소가 다른 요소들과의 관계를 반영한 표현을 얻는 데 사용됩니다.